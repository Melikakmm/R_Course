x <- 6
y<- 7
z <- x+y
c(1, 2, 3, NA, 90, 47, 78)
is.na()
x<-c(1, 2, 3, 4, NA)
is.na(x)
is.infinite((x))
is.finite(x)
y<- Inf
z<-NA
is.finite(z)
is.infinite(z)
NA^0
NA * 0
NA & FALSE
NA | TRUE
y<- c(1, 2, 3, NA)
is.na(y)
is.na(y)
y[! is.na(y)]
y<- c(4, NA, -8 ) ; mean(y)
mean(y, na.rm = TRUE)
std(y, na.rm = TRUE)
stderr(y, na.rm = TRUE)
seq(1, 19, 2)
seq(from = 10, to = 11, length = 10)
seq(1, 10, 2)
vmv <- c(1:6, NA, NA, 8:12)
mean(vmv, na.rm = TRUE)
seq(along = vmv)
seq(along = vmv)[is.na(vmv)]
seq(along = vmv)[!is.na(vmv)]
which(is.na(vmv))
which(! is.na(vmv))
vmv[is.na(vmv)] <-0
vmv
vmv[is.na(vmv)]<-0
vmv
vmv[! is.na(vmv)] <- 85
vmv
vmv <- c(1:6, NA, NA, 8:12)
vmv[which(is.na(vmv))] <-3
seq(along = vmv)
vmv
vmv <- c(1:6, NA, NA, 8:12)
vmv
ifelse(is.na(vmv), 0, vmv) ; vmv
probe<- c(4, 7, 6, 5, 6, 7)
length(probe)
mean(probe)
max(probe)
min(probe)
length(probe)
probe[1]
probe[9]
probe[2]
index<- c(1, 2, 3, 4)
probe[index]
probe[1, 2, 3, 4]
probe[1:4]
probe[2:4]
probe
probe[-1]
probe
probe[-2]
probe[-1:-3]
probe[-length(probe)]
trim <- function(x)sort(x) [-c(1, 2, length(x), length(x)-1)]
trim(probe)
probe
sort(probe)
seq(along = probe)
probe[1:3]
probe(c(1, 2, 3))
probe[c(1, 2, 3)]
probe[seq(1, 4, 2)]
probe[seq(1, length(probe), 2)]
counts <- c(1, 2, 3, 4, 5, 6, 7)
animals <- c('cat', 'dog', 'mouse', 'horse', 'monkey', 'elephant', 'fish')
attr(counts, animals)
attributes(counts)
attr(counts, name) <- 'shomaresh'
attr(counts, 'name') <- 'shomareshe adad'
attribute(counts)
attributes(counts)
attr(counts, 'family') <- 'keshavarz'
attr(counts, "family")
x <- c(a = 1, b = 2, c = 3)
x
x <- 1:3
names(x) <- c('a', 'b', 'c')
x
x <- 1:4
x
names(x) <- c('m', 'n', 'o', 'p')
x
x<- setNames(1:5, c('m', 'c', 'j', 'hg', 'k'))
x
unname(x)
counts <- c(25, 12, 7, 4, 6, 1, 0, 2)
names(counts) <- 0:(length(x)-1)
counts <- c(1, 2, 3, 4, 5)
attr(counts, 'shomaresh')
attr(counts, 'name') <- 'shomaresh'
attr(counts, 'family') <- 'numbers'
attr(counts, 'p') <- 'poet'
attr(counts, 'name')
attr(counts, 'family')
attr(counts, 'p')
attributes(counts)
x <- c(a = 1, b = 2, c = 3)
x
x <- c(1, 2, 3)
names(x) <- c('a', 'b', 'c')
x
x <- c(1, 2, 3)
x
x<- setNames(1:3, c('a', 'b', 'c'))
x
y <- c(meli= 26, eli = 28, george = 21)
y
x<- c(26, 28, 21)
y<- c(26, 28, 21)
names(y)<- c('meli', 'eli', 'george')
y
y <- setNames(c(26, 28, 21), c('meli', 'eli', 'georgy'))
y
names(x)
names(y)
names(y)
namnes(y)
names(y)
unname(y)
counts<- c(25, 12, 7, 4, 6, 1, 0, 2)
names(counts) <- 0:length(counts) -1
names(counts) <- (0:length(counts) -1)
counts <- c(25, 12, 7, 4, 6, 2, 1, 0, 2)
names(counts) <- 0:length(counts)-1
names(counts) <- (0:length(counts)-1)
names(counts) <- 0:(length(counts)-1)
str(counts)
x<- c(a = 1, b = 2, c = 3)
x
x<- 1:3
x<- c(a = 1, b = 2, c = 3)
x
x <- 1:3
names(x) <- c('a', 'b', 'c')
x <- setNames(1:3, c('a', 'b', 'c'))
x
names(x)
names(x)
unname(x)
name(x)
names(x)
unname(x)
nnames(x)<- NULL
names(x) <- NULL
names(x)
probe <- c(4, 7, 6, 5, 6, 7)
length(x)
length(probe)
mean(probe)
min(probe)
max(probe)
probe[1]
index <- c(2, 3, 1, 5)
probe(index)
probe[index]
probe[-1]
probe
probe[-1:-3]
probe[-length(probe)]
probe[-length(probe)]
probe[-length(probe)
]
trim <- function(x) sort(x)
trim <- function(x) sort(x)[-c(1, 2, length(x), length(x)-1)]
trim(probe)
probe[1:3]
probe[seq(2, length(probe), 2)]
counts <- c(25, 12, 7, 4, 6, 2, 1, 0, 2)
attr(counts, 'nx') <- 'numbers of data'
attr(counts, 'ny') <- 'numbers of data'
attributes(counts)
attr(counts, 'ny') <- 'numbers of events'
attributes(counts)
x <- c(1, 2, 3, 4)
names(x) <- c('a', 'b', 'c')
x
y <- setNames(1:5, c('a', 'b', 'c', 'd', 'e', 'f'))
y <- setNames(1:5, c('a', 'b', 'c', 'd', 'e'))
y
names(y)
unname(y)
names(y) <- NULL
names(y)
counts <- c(25, 12, 7, 4, 6, 2, 1, 0, 2)
names(counts)
names(counts) <- 0:length(counts) -1
names(counts) <- 0:(length(counts) -1)
names(counts)
str(counts)
v1 <- 1:20
str(v1)
class(v1)
dim(v1) <- c(4, 5)
str(v1)
class(v1)
v1
v1 <- 1:20
v1 <- c(2, 5, 2)
class(v1)
v1 <- 1:20
dim(v1) <- c(2, 5, 2)
class(v1)
dim(v1)
str(v1)
v1
v1 <- 1:20
V <- matrix(v1 , nrow = 4, ncol = 5)
V
dim(V) <- c(2, 5, 2)
V
array(v1, c(2, 5, 2))
x <- 0:10
--salam
#salam
x <- 1:10
sum(x) -> u
u
sum(x<5)
x[1]
x[x>7]
x[x<6]
x[x<= 6]
x <- factor('a', 'b', 'b', 'c')
x
x <- factanal(c('a', 'b', 'b', 'c'))
x <- factor(c('a', 'b', 'b', 'c'))
x
str(x)
typeof(x)
attributes(x)
z <- 1:4
attr(nx, ny) <- c('hey', 'hello')
coord <- factor(c('EST', 'EST', 'WEST', 'SOUTH'), levels = c('NORTH','SOUTH', 'EST', 'WEST' ))
tabel(coord)
table(coord)
z <- ordered(c('low', 'high', 'medium'), levels = c('low', 'medium', 'high'))
z
str(z)
table(z)
summary(z)
barplot(table(z), color = 'orchid1')
barplot(table(z), color = 'orchid')
barplot(table(z), color = 'orchid2')
grade <- ordered(c('low', 'low', 'low', 'low', 'high', 'high', 'low', 'low', 'medium'))
grade <- ordered(c('low', 'low', 'low', 'low', 'high', 'high', 'low', 'low', 'medium'), levels = c('low', 'medium', 'high'))
table(grade)
summary(grade)
str(grade)
barplot(table(grade), color = 'orchid')
barplot ( table ( grade ) , color =" orchid 2")
today <- Sys.today()
today <- Sys.Date() ; today
typeof(today)
class(today)
yesterday <- as.Date('2022-04-2')
yesterday
now_ct <- as.POSIXct(Sys.time, tzone = 'CET')
now_ct <- as.POSIXct(Sys.time(), tzone = 'CET')
now_ct
myBrithday <- as.POSIXct('1995-09-20  10:00', tzone = 'CET')
myBrithday
now_ct -myBrithday
9692.29 / 12
9692.29 / 365
structure(now-ct, tzone = 'Europe / Rome')
structure(now_ct, tzone = 'Europe / Rome')
structure(now_ct, tzone = ' Europe / Rome ')
structure ( now _ ct , tzone =" Europe / Rome ")
structure ( now_ct , tzone =" Europe / Rome ")
structure(now_ct, tzone = 'Europe/Moscow')
structure(now_ct, tzone = 'Europe/Rome')
structure(now_ct, tzone = 'Asia/Iran')
structure(now_ct, tzone = 'Middleeast/Iran')
x <- Sys.Date()
x
z <- Sys.time()
z
m <- as.Date()
yesterday <- as.Date('2020-03-01')
yesterday
now <- as.POSIXct(Sys.time(, tzone = 'Europe/ Moscow'))
now <- as.POSIXct(Sys.time, tzone = 'Europe/ Moscow')
now <- as.POSIXct(Sys.time(), tzone = 'Europe/ Moscow')
now
my <- as.POSIXct('1995-09-20  10:00', tzone = 'CET')
my
n <- as.difftime(now, my)
now-my
9692 - 3650
week <- as.difftime(1, units = 'week')
week <- as.difftime(1, units = 'weeks')
week
next_sunday <- today + week
next_sunday
names <-c('Melika', 'George', 'Eli', 'Farshad', 'Jake', 'Daniel')
table(names)
names <-c('Melika', 'George', 'Eli', 'Farshad', 'Jake', 'Daniel', 'Melika', 'Melika', 'Eli')
names
table(names)
unique(names)
duplicated(names)
names[! dupicated(names)]
names[! duplicated(names)]
names[ duplicated(names)]
y<10
y<-10
if (x > y ) cat('x is bigger than y\n')
cat('y is bigger than x')
if x > y {
cat('x is bigger than y')
} else {
cat('y is bigger than x')
}
cat('y is bigger than x')}
if x > y {
cat('x is bigger than y')
} else {
cat('y is bigger than x')
}
else {
cat('y is bigger than x')
}
if (x > y) {
cat ("x is bigger \n")
} else {
cat ("y is bigger \n")
}
cat(' x and y are equal\n')
if (x > y) {
cat('x is bigger than y\n')
}else (x < y) {
cat('y is bigger than x\n')
}else {
cat(' x and y are equal\n')
}
if (x > y) {
cat('x is bigger than y\n')
}else (x < y) {
cat('y is bigger than x\n')
}else {
cat(' x and y are equal\n')
}
if (x > y) {
cat('x is bigger than y\n')
} else (x < y) {
cat('y is bigger than x\n')
} else {
cat(' x and y are equal\n')
}
if (x > y) {
cat('x is bigger than y\n')
} else if (x < y) {
cat('y is bigger than x\n')
} else {
cat(' x and y are equal\n')
}
switch(1, 'Melika', 'Baba', 'Payam', 'Peyman')
switch(2, 'Melika', 'Baba', 'Payam', 'Peyman')
switch(3, 'Melika', 'Baba', 'Payam', 'Peyman')
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
y<-10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
y = 10
str(msg)
cat(msg, '\n')
msg <- switch(as.character(sign(x)))
x = 12
y = 10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
x = 12
y = 10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
x = 12
y = 10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
x = 12
y = 10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
x = 12
y = 10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
x = 12
y = 10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
x = 12
y = 10
msg <- switch(as.character(sign(x-y)),
'1' = 'x is bigger than y',
'0' = 'x and y are equal',
'-1' = 'y is bigger than x')
x <- c(1, 2, 3, 4, 7, 8, 9 )
for (i in x) cat(i, '\n')
for (i in x) cat(i, ' | ')
for (i in 1:5) cat(i +1, ' | ')
for (i in 1:-1) cat(i, '*')
j < 6
while j < 3 {
cat('*', '  | ')
j <- j + 1
}
j <- j + 1
while (j < 3) {
cat('*', '  | ')
j <- j + 1
}
j <- 0
j <- 0
while (i <6) {
cat (i ," | ")
i <- i + 1
}
if (!(x < 6)) {break}
if (!(i<6)) {break}
